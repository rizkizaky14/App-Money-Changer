 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tugasgui;

import java.awt.Image;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.Icon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author rizki
 */
public class MoneyChanger extends javax.swing.JFrame {
    // Variabel untuk menyimpan data
    private static String savedDataBank;
    private static String savedDataKurs;
    private int idTransaksiCounter = 1;
    /**
     * Creates new form MoneyChanger
     */
    public MoneyChanger() {
        initComponents();
        cbMataUang1.setSelectedIndex(0);
        cbMataUang2.setSelectedIndex(0);
        txtHasil.setText("0");
        txtNilaiKurs1.setText("0");
        txtNilaiKurs2.setText("0");
        txtNilaiTukar.setText("0");
        txtHasil.setEditable(false);
        buttonGroup1.clearSelection();
        HasilPerbandingan.setEditable(false);
        //set false button
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
        clearAndSubmit.setEnabled(false);
        
        //Event Handling untuk set setiap perubahan input akan menutup setiap button
        Amerika.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                save.setEnabled(false);
                update.setEnabled(false);
                delete.setEnabled(false);
                clearAndSubmit.setEnabled(false);
            } else {
                save.setEnabled(false);
                update.setEnabled(false);
                delete.setEnabled(false);
                clearAndSubmit.setEnabled(false);
            }
        });
        cbMataUang1.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                save.setEnabled(false);
                update.setEnabled(false);
                delete.setEnabled(false);
                clearAndSubmit.setEnabled(false);
            }
        });
        cbMataUang2.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                save.setEnabled(false);
                update.setEnabled(false);
                delete.setEnabled(false);
                clearAndSubmit.setEnabled(false);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    static class DatabaseConnection {
        public static Connection connect() throws SQLException {
            String url = "jdbc:mysql://localhost:3306/money_changer";
            String user = "root";
            String password = "";

            return DriverManager.getConnection(url, user, password);
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Amerika = new javax.swing.JRadioButton();
        Jepang = new javax.swing.JRadioButton();
        Perancis = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Bendera = new javax.swing.JLabel();
        Kurs = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbMataUang1 = new javax.swing.JComboBox<>();
        txtKurs1 = new javax.swing.JLabel();
        txtNilaiKurs1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbMataUang2 = new javax.swing.JComboBox<>();
        txtKurs2 = new javax.swing.JLabel();
        txtNilaiKurs2 = new javax.swing.JTextField();
        pnKurs = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtHasil = new javax.swing.JTextField();
        txtNilaiTukar = new javax.swing.JTextField();
        mataUang = new javax.swing.JLabel();
        HitungMandiri = new javax.swing.JButton();
        HitungBCA = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mataUang1 = new javax.swing.JCheckBox();
        HasilPerbandingan = new javax.swing.JTextField();
        clearAndSubmit = new javax.swing.JButton();
        save = new javax.swing.JButton();
        search = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt_idTransaksi = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(217, 237, 145));

        jPanel1.setBackground(new java.awt.Color(236, 233, 216));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("PENUKARAN VALUTA ASING");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Bank di Jakarta");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pilih Negara"));
        jPanel2.setPreferredSize(new java.awt.Dimension(387, 280));

        buttonGroup1.add(Amerika);
        Amerika.setSelected(true);
        Amerika.setText("Amerika Serikat");
        Amerika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmerikaActionPerformed(evt);
            }
        });

        buttonGroup1.add(Jepang);
        Jepang.setText("Jepang");
        Jepang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JepangActionPerformed(evt);
            }
        });

        buttonGroup1.add(Perancis);
        Perancis.setText("Perancis");
        Perancis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerancisActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Preview Mata Uang");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Preview Bendera Negara");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Amerika)
                    .addComponent(Jepang)
                    .addComponent(Perancis))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(Bendera, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(59, 59, 59))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(Kurs, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Amerika))
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Jepang)
                        .addGap(18, 18, 18)
                        .addComponent(Perancis))
                    .addComponent(Bendera, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(Kurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Nilai Tukar Valas"));

        jLabel5.setText("Bank Mandiri");

        cbMataUang1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----- Pilih 1 -----", "Dollar", "Yen", "Euro" }));
        cbMataUang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMataUang1ActionPerformed(evt);
            }
        });

        txtKurs1.setText("Rupiah / (sesuaikan)");

        txtNilaiKurs1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNilaiKurs1ActionPerformed(evt);
            }
        });

        jLabel7.setText("BCA");

        cbMataUang2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----- Pilih 2 -----", "Dollar", "Yen", "Euro" }));
        cbMataUang2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMataUang2ActionPerformed(evt);
            }
        });

        txtKurs2.setText("Rupiah / (sesuaikan)");

        pnKurs.setBorder(javax.swing.BorderFactory.createTitledBorder("Kurs VALAS di Bank Mandiri & BCA"));

        jLabel9.setText("Jumlah Uang yang di Tukar Rp.");

        jLabel10.setText("Jumlah Nilai Tukar");

        txtHasil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHasilActionPerformed(evt);
            }
        });

        txtNilaiTukar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNilaiTukarFocusGained(evt);
            }
        });
        txtNilaiTukar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNilaiTukarActionPerformed(evt);
            }
        });
        txtNilaiTukar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNilaiTukarKeyTyped(evt);
            }
        });

        mataUang.setText("Mata Uang");

        HitungMandiri.setText("Mandiri");
        HitungMandiri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HitungMandiriMouseClicked(evt);
            }
        });
        HitungMandiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitungMandiriActionPerformed(evt);
            }
        });

        HitungBCA.setText("BCA");
        HitungBCA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HitungBCAMouseClicked(evt);
            }
        });
        HitungBCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitungBCAActionPerformed(evt);
            }
        });

        jLabel11.setText("Pilih Bank");

        javax.swing.GroupLayout pnKursLayout = new javax.swing.GroupLayout(pnKurs);
        pnKurs.setLayout(pnKursLayout);
        pnKursLayout.setHorizontalGroup(
            pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKursLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(26, 26, 26)
                .addGroup(pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHasil)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnKursLayout.createSequentialGroup()
                        .addComponent(txtNilaiTukar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mataUang))
                    .addGroup(pnKursLayout.createSequentialGroup()
                        .addComponent(HitungMandiri)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HitungBCA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnKursLayout.setVerticalGroup(
            pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKursLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNilaiTukar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mataUang)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                .addGroup(pnKursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HitungMandiri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HitungBCA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnKurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKurs1)
                            .addComponent(txtNilaiKurs1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMataUang1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbMataUang2, 0, 140, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(txtKurs2)
                            .addComponent(txtNilaiKurs2))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMataUang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMataUang2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKurs1)
                    .addComponent(txtKurs2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNilaiKurs1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNilaiKurs2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnKurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel4.setText("Perbandingan Kurs Mandiri & BCA");

        mataUang1.setText("Dollar");
        mataUang1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mataUang1StateChanged(evt);
            }
        });
        mataUang1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mataUang1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mataUang1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mataUang1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mataUang1MousePressed(evt);
            }
        });
        mataUang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mataUang1ActionPerformed(evt);
            }
        });

        clearAndSubmit.setText("Clear & Submit");
        clearAndSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAndSubmitActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        reset.setText("Reset Table");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel6.setText("Id Transaksi");

        txt_idTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_idTransaksiFocusGained(evt);
            }
        });
        txt_idTransaksi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idTransaksiKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mataUang1)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(HasilPerbandingan, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(18, 18, 18)
                                            .addComponent(search)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(reset)
                                        .addGap(18, 18, 18)
                                        .addComponent(delete))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_idTransaksi)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(update)
                                        .addGap(18, 18, 18)
                                        .addComponent(save))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addComponent(clearAndSubmit)))
                                .addGap(22, 22, 22)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(save)
                    .addComponent(search)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset)
                    .addComponent(update)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mataUang1)
                    .addComponent(HasilPerbandingan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearAndSubmit)
                    .addComponent(jLabel6)
                    .addComponent(txt_idTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Transaksi", "Negara", "Mata Uang", "Nilai Mata Uang", "Jumlah Nilai tukar", "Hasil Nilai tukar", "Bank", "keterangan"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void HitungMandiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitungMandiriActionPerformed
        // TODO add your handling code here:
        int kurs1 = Integer.parseInt(txtNilaiKurs1.getText());
        int tukar = Integer.parseInt(txtNilaiTukar.getText());
        int us = (kurs1 * tukar);
        txtHasil.setText(String.valueOf(us));
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
        clearAndSubmit.setEnabled(false);
    }//GEN-LAST:event_HitungMandiriActionPerformed

    private void txtNilaiTukarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNilaiTukarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNilaiTukarActionPerformed

    private void txtHasilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHasilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHasilActionPerformed

    private void cbMataUang2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMataUang2ActionPerformed
        // TODO add your handling code here:
//            pnKurs.set("Kurs VALAS di Bank BCA");
        if(cbMataUang2.getSelectedIndex() ==0) {
            txtNilaiKurs2.setText("0");
            mataUang.setText("Mata Uang");
            txtKurs2.setText("Rupiah / (sesuaikan)");
            mataUang1.setText("Mata Uang");
            txtNilaiTukar.setText("");
            txtNilaiKurs2.setEditable(false);
            txtNilaiTukar.setEditable(true);
            Bendera.setVisible(false);
            Kurs.setVisible(false);
            cbMataUang1.setSelectedIndex(0);
            buttonGroup1.clearSelection();
        }
        if(cbMataUang2.getSelectedIndex() ==1) {
            txtNilaiKurs2.setText("9200");
            mataUang.setText("Dollar"); 
            txtKurs2.setText("Rupiah / 1 Dollar");
            mataUang1.setText("Dollar");
            txtNilaiTukar.requestFocus();
            txtNilaiKurs2.setEditable(false);
            txtNilaiTukar.setEditable(true);
        ImageIcon iconAmerika = new ImageIcon(getClass().getResource("/gambar/Ameika.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconAmerika.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconAmerika = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconAmerika);
        
                // Mata Uang
        ImageIcon iconDollar = new ImageIcon(getClass().getResource("/gambar/Dollar.jpg"));
        Image uang = iconDollar.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconDollar = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconDollar);
        cbMataUang1.setSelectedIndex(1);
        cbMataUang2.setSelectedIndex(1);
        }
        if(cbMataUang2.getSelectedIndex() ==2) {
            txtNilaiKurs2.setText("123");
            mataUang.setText("Yen");
            txtKurs2.setText("Rupiah / 1 Yen");
            mataUang1.setText("Yen");
            txtNilaiTukar.requestFocus();
            txtNilaiKurs2.setEditable(false);
            txtNilaiTukar.setEditable(true);
                    ImageIcon iconJepang = new ImageIcon(getClass().getResource("/gambar/Jepang.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconJepang.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconJepang = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconJepang);

        // Mata Uang
        ImageIcon iconYen = new ImageIcon(getClass().getResource("/gambar/Yen.png"));
        Image uang = iconYen.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconYen = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconYen);
        cbMataUang1.setSelectedIndex(2);
        cbMataUang2.setSelectedIndex(2);
        }
        if(cbMataUang2.getSelectedIndex() ==3) {
            txtNilaiKurs2.setText("13970");
            mataUang.setText("Euro");
            txtKurs2.setText("Rupiah / 1 Euro");
            mataUang1.setText("Euro");
            txtNilaiTukar.requestFocus();
            txtNilaiKurs2.setEditable(false);
            txtNilaiTukar.setEditable(true);
        ImageIcon iconPerancis = new ImageIcon(getClass().getResource("/gambar/Perancis.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconPerancis.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconPerancis = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconPerancis);

        // Mata Uang
        ImageIcon iconEuro = new ImageIcon(getClass().getResource("/gambar/euro.png"));
        Image uang = iconEuro.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconEuro = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconEuro);
        cbMataUang1.setSelectedIndex(3);
        cbMataUang2.setSelectedIndex(3);
        }
        mataUang1.setSelected(false);
        HasilPerbandingan.setText("");
        txtHasil.setText("");
    }//GEN-LAST:event_cbMataUang2ActionPerformed

    private void cbMataUang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMataUang1ActionPerformed
        // TODO add your handling code here:
//            pnKurs.setText("Kurs VALAS di Bank Mandiri");
        if(cbMataUang1.getSelectedIndex() ==0) {
            txtNilaiKurs1.setText("0");
            mataUang.setText("Mata Uang");
            txtKurs1.setText("Rupiah / (sesuaikan)");
            mataUang1.setText("Mata Uang");
            txtNilaiTukar.setText("");
            txtNilaiKurs1.setEditable(false);
            txtNilaiTukar.setEditable(true);
            Bendera.setVisible(false);
            Kurs.setVisible(false);
            cbMataUang2.setSelectedIndex(0);
            buttonGroup1.clearSelection();
        }
        if(cbMataUang1.getSelectedIndex() ==1) {
            Bendera.setVisible(true);
            Kurs.setVisible(true);
            Amerika.setSelected(true);
            txtNilaiKurs1.setText("9150");
            mataUang.setText("Dollar");
            txtKurs1.setText("Rupiah / 1 Dollar");
            mataUang1.setText("Dollar");
            txtNilaiTukar.requestFocus();
            txtNilaiKurs1.setEditable(false);
            txtNilaiTukar.setEditable(true);
        ImageIcon iconAmerika = new ImageIcon(getClass().getResource("/gambar/Ameika.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconAmerika.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconAmerika = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconAmerika);
        
                // Mata Uang
        ImageIcon iconDollar = new ImageIcon(getClass().getResource("/gambar/Dollar.jpg"));
        Image uang = iconDollar.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconDollar = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconDollar);
        cbMataUang1.setSelectedIndex(1);
        cbMataUang2.setSelectedIndex(1);
        }
        if(cbMataUang1.getSelectedIndex() ==2) {
            Bendera.setVisible(true);
            Kurs.setVisible(true);
            Jepang.setSelected(true);
            txtNilaiKurs1.setText("122");
            mataUang.setText("Yen");
            txtKurs1.setText("Rupiah / 1 Yen");
            mataUang1.setText("Yen");
            txtNilaiTukar.requestFocus();
            txtNilaiKurs1.setEditable(false);
            txtNilaiTukar.setEditable(true);
        ImageIcon iconJepang = new ImageIcon(getClass().getResource("/gambar/Jepang.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconJepang.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconJepang = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconJepang);

        // Mata Uang
        ImageIcon iconYen = new ImageIcon(getClass().getResource("/gambar/Yen.png"));
        Image uang = iconYen.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconYen = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconYen);
        cbMataUang1.setSelectedIndex(2);
        cbMataUang2.setSelectedIndex(2);
        }
        if(cbMataUang1.getSelectedIndex() ==3) {
            Bendera.setVisible(true);
            Kurs.setVisible(true);
            Perancis.setSelected(true);
            txtNilaiKurs1.setText("13980");
            mataUang.setText("Euro");
            txtKurs1.setText("Rupiah / 1 Euro");
            mataUang1.setText("Euro");
            txtNilaiTukar.requestFocus();
            txtNilaiKurs1.setEditable(false);
            txtNilaiTukar.setEditable(true);
        ImageIcon iconPerancis = new ImageIcon(getClass().getResource("/gambar/Perancis.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconPerancis.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconPerancis = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconPerancis);

        // Mata Uang
        ImageIcon iconEuro = new ImageIcon(getClass().getResource("/gambar/euro.png"));
        Image uang = iconEuro.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconEuro = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconEuro);
        cbMataUang1.setSelectedIndex(3);
        cbMataUang2.setSelectedIndex(3);
        }
        mataUang1.setSelected(false);
        HasilPerbandingan.setText("");
        txtHasil.setText("");
    }//GEN-LAST:event_cbMataUang1ActionPerformed

    private void PerancisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerancisActionPerformed
        Bendera.setVisible(true);
        Kurs.setVisible(true);
        ImageIcon iconPerancis = new ImageIcon(getClass().getResource("/gambar/Perancis.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconPerancis.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconPerancis = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconPerancis);

        // Mata Uang
        ImageIcon iconEuro = new ImageIcon(getClass().getResource("/gambar/euro.png"));
        Image uang = iconEuro.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconEuro = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconEuro);
        cbMataUang1.setSelectedIndex(3);
        cbMataUang2.setSelectedIndex(3);
        txtHasil.setText("");
    }//GEN-LAST:event_PerancisActionPerformed

    private void JepangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JepangActionPerformed
        Bendera.setVisible(true);
        Kurs.setVisible(true);
        ImageIcon iconJepang = new ImageIcon(getClass().getResource("/gambar/Jepang.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconJepang.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconJepang = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconJepang);

        // Mata Uang
        ImageIcon iconYen = new ImageIcon(getClass().getResource("/gambar/Yen.png"));
        Image uang = iconYen.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconYen = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconYen);
        cbMataUang1.setSelectedIndex(2);
        cbMataUang2.setSelectedIndex(2);
        txtHasil.setText("");
    }//GEN-LAST:event_JepangActionPerformed

    private void AmerikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmerikaActionPerformed
        // TODO add your handling code here:
        Bendera.setVisible(true);
        Kurs.setVisible(true);
        ImageIcon iconAmerika = new ImageIcon(getClass().getResource("/gambar/Ameika.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconAmerika.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconAmerika = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconAmerika);

        // Mata Uang
        ImageIcon iconDollar = new ImageIcon(getClass().getResource("/gambar/Dollar.jpg"));
        Image uang = iconDollar.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconDollar = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconDollar);
        cbMataUang1.setSelectedIndex(1);
        cbMataUang2.setSelectedIndex(1);
        txtHasil.setText("");
    }//GEN-LAST:event_AmerikaActionPerformed

    private void clearAndSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAndSubmitActionPerformed
        //Id Transaksi    
        int IdTransaksi = Integer.parseInt(txt_idTransaksi.getText());
        //Pilih Negara
        ArrayList<String> pilihNegara = new ArrayList<>();
        if (Amerika.isSelected()) {
            pilihNegara.add("Amerika");
        }
        if (Jepang.isSelected()) {
            pilihNegara.add("Jepang");
        }
        if (Perancis.isSelected()) {
            pilihNegara.add("Perancis");
        }
        
        //Pilih mata uang
        ArrayList<String> pilihMataUang = new ArrayList<>();
        if (Amerika.isSelected()) {
            pilihMataUang.add("Dollar");
        }
        if (Jepang.isSelected()) {
            pilihMataUang.add("Yen");
        }
        if (Perancis.isSelected()) {
            pilihMataUang.add("Euro");
        }
        
        //Pilih Bank Kurs
        String kurs = savedDataKurs;
        ArrayList<String> pilihKurs = new ArrayList<>();
        if (kurs.equals("Mandiri")) {
            pilihKurs.add(txtNilaiKurs1.getText());
        }
        if (kurs.equals("BCA")) {
            pilihKurs.add(txtNilaiKurs2.getText());
        }
    
        //Mengisi data Negara ke dalam Tabel
        String[] pilihNegaraArray = pilihNegara.toArray(new String[0]);
        String negara = String.join(" + ", pilihNegaraArray);

        //Mengisi data Mata Uang ke dalam Tabel
        String[] pilihMataUangArray = pilihMataUang.toArray(new String[0]);
        String uang = String.join(" + ", pilihMataUangArray);

         //Mengisi data Kurs ke dalam Tabel
        String[] pilihKursArray = pilihKurs.toArray(new String[0]);
        String hasilKurs = String.join(" + ", pilihKursArray);
        
        //Mengisi Nilai Tukar
        String nilaiTukar = txtNilaiTukar.getText();
        //Mengisis Hasil Nilai Tukar
        String hasilTukar = txtHasil.getText();
        
        //Mengisi Bank
        String bank = savedDataBank;
        
        //Mengisis Keterangan
        String keterangan = HasilPerbandingan.getText();
        
//        clear.addActionListener(e -> addRow());
    
    DefaultTableModel dataModel = (DefaultTableModel) table.getModel();
    dataModel.addRow(new Object[]{IdTransaksi,negara,uang,hasilKurs,nilaiTukar,hasilTukar,bank,keterangan});
//        idTransaksiCounter++;
        cbMataUang1.setSelectedIndex(0);
        cbMataUang2.setSelectedIndex(0);
        txtHasil.setText("0");
        txtNilaiKurs1.setText("0");
        txtNilaiKurs2.setText("0");
        txtNilaiTukar.setText("0");
        Bendera.setVisible(false);
        Kurs.setVisible(false);
        buttonGroup1.clearSelection();
        save.setEnabled(true);
    }//GEN-LAST:event_clearAndSubmitActionPerformed
    
//    private void addRow() {
//        DefaultTableModel dataModel = (DefaultTableModel) table.getModel();
//        // Increment idTransaksi and add a new row to the table
//        String[] rowData = {String.valueOf(idTransaksiCounter)};
//        dataModel.addRow(rowData);
//        
//        // Increment the idTransaksi counter for the next row
//        idTransaksiCounter++;
//    }
    
    private void HitungBCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitungBCAActionPerformed
        // TODO add your handling code here:
        int kurs2 = Integer.parseInt(txtNilaiKurs2.getText());
        int tukar = Integer.parseInt(txtNilaiTukar.getText());
        int us = (kurs2 * tukar);
        txtHasil.setText(String.valueOf(us));
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
        clearAndSubmit.setEnabled(false);
    }//GEN-LAST:event_HitungBCAActionPerformed

    private void txtNilaiKurs1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNilaiKurs1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNilaiKurs1ActionPerformed

    private void mataUang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mataUang1ActionPerformed
        //Mandiri
        int nilai1 = Integer.parseInt(txtNilaiKurs1.getText());
        //BCA
        int nilai2 = Integer.parseInt(txtNilaiKurs2.getText());
        //menambahkan string kurs pada variabel HasilPerbandingan
        String kurs = mataUang.getText();
        mataUang.setText(String.valueOf(kurs));
        
        if (mataUang1.isSelected()) {
          if (nilai1 < nilai2) {
            HasilPerbandingan.setText("Kurs " + kurs +" di Bank Mandiri lebih murah dari BCA");
        } else if (nilai1 > nilai2) {
            HasilPerbandingan.setText("Kurs " + kurs +" di Bank Mandiri lebih mahal dari BCA");
        } else {
            HasilPerbandingan.setText("Kurs " + kurs +" di Bank Mandiri sama besar dengan BCA");
        }
        }else {
         HasilPerbandingan.setText("");
        }
    }//GEN-LAST:event_mataUang1ActionPerformed

    private void txtNilaiTukarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNilaiTukarFocusGained
        txtNilaiTukar.setText("");
    }//GEN-LAST:event_txtNilaiTukarFocusGained

    private void HitungMandiriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HitungMandiriMouseClicked
        // Menyimpan data ke variabel
        savedDataKurs = "Mandiri";
        savedDataBank = "Mandiri";
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
    }//GEN-LAST:event_HitungMandiriMouseClicked

    private void HitungBCAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HitungBCAMouseClicked
        // Menyimpan data ke variabel
        savedDataKurs = "BCA";
        savedDataBank = "BCA";
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
    }//GEN-LAST:event_HitungBCAMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // Mendapatkan data dari table
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        // Iterasi melalui setiap baris di tabel nilai mhs
        for (int i = 0; i < model.getRowCount(); i++) {
        //Ambil Niali dari setiap kolom
        int IdTransaksi = Integer.parseInt(table.getValueAt(i,0).toString());
        String Negara = (String) table.getValueAt(i, 1);
        String MataUang  = (String) table.getValueAt(i, 2);
        int NilaiMataUang = Integer.parseInt(table.getValueAt(i, 3).toString());
        int JumlahNilaiTukar = Integer.parseInt(table.getValueAt(i, 4).toString());
        int HasilNilaiTukar = Integer.parseInt(table.getValueAt(i, 5).toString());
        String Bank = (String) table.getValueAt(i, 6);
        String Keterangan = (String) table.getValueAt(i, 7);
        
        saveToDatabase(IdTransaksi,Negara,MataUang,NilaiMataUang,JumlahNilaiTukar,HasilNilaiTukar,Bank,Keterangan);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
// Mendapatkan teks dari txtSearch
    String searchText = txtSearch.getText();

    // Mengecek apakah teks kosong atau tidak
    if (searchText.isEmpty()) {
        // Jika teks kosong, lakukan kondisi berikut
        loadData();
    } else {
        // Jika teks tidak kosong, lakukan kondisi berikut
        try {
            searchAndDisplayData(txtSearch.getText());
        } catch (SQLException ex) {
            Logger.getLogger(MoneyChanger.DatabaseConnection.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }  
    }//GEN-LAST:event_searchActionPerformed
    
    private void loadData() {
        getAllData((DefaultTableModel) table.getModel());
    }
    
    public void getAllData(DefaultTableModel model) {
    model.setRowCount(0);

    try {
        Connection conn = DatabaseConnection.connect();
        String sql = "SELECT * FROM transaksi";
        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                    Integer IdTransaksi = rs.getInt("IdTransaksi");
                    String Negara = rs.getString("Negara");
                    String MataUang = rs.getString("MataUang");
                    Integer NilaiMataUang = rs.getInt("NilaiMataUang");
                    Integer JumlahNilaiTukar = rs.getInt("JumlahNilaiTukar");
                    Integer HasilNilaiTukar = rs.getInt("HasilNilaiTukar");
                    String Bank = rs.getString("Bank");
                    String Keterangan = rs.getString("Keterangan");

                Object[] rowData = {IdTransaksi, Negara, MataUang, NilaiMataUang, JumlahNilaiTukar, HasilNilaiTukar, Bank, Keterangan};
                model.addRow(rowData);
            }
        }
    } catch (SQLException e) {
        Logger.getLogger(tugasgui.MoneyChanger.class.getName()).log(Level.SEVERE, null, e);
    }
}
    
    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }//GEN-LAST:event_resetActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int i = table.getSelectedRow();
        TableModel model = table.getModel();
        
        String pilihNegara = (String) model.getValueAt(i, 0);
         if (pilihNegara.contains("Amerika")) {
        Amerika.setSelected(true);
        Bendera.setVisible(true);
        Kurs.setVisible(true);
        ImageIcon iconAmerika = new ImageIcon(getClass().getResource("/gambar/Ameika.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconAmerika.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconAmerika = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconAmerika);

        // Mata Uang
        ImageIcon iconDollar = new ImageIcon(getClass().getResource("/gambar/Dollar.jpg"));
        Image uang = iconDollar.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconDollar = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconDollar);
        cbMataUang1.setSelectedIndex(1);
        cbMataUang2.setSelectedIndex(1);
        //===============================================================================    
        }else if (pilihNegara.contains("Jepang")) {
        Jepang.setSelected(true);
        Bendera.setVisible(true);
        Kurs.setVisible(true);
        ImageIcon iconJepang = new ImageIcon(getClass().getResource("/gambar/Jepang.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconJepang.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconJepang = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconJepang);

        // Mata Uang
        ImageIcon iconYen = new ImageIcon(getClass().getResource("/gambar/Yen.png"));
        Image uang = iconYen.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconYen = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconYen);
        cbMataUang1.setSelectedIndex(2);
        cbMataUang2.setSelectedIndex(2);
        //============================================================================================
        }else if (pilihNegara.contains("Perancis")) {
        Perancis.setSelected(true);
        Bendera.setVisible(true);
        Kurs.setVisible(true);
        ImageIcon iconPerancis = new ImageIcon(getClass().getResource("/gambar/Perancis.png"));
        // Ambil gambar dari ImageIcon
        Image image = iconPerancis.getImage();
        // Ubah ukuran gambar
        Image resizedImage = image.getScaledInstance(220, 110, java.awt.Image.SCALE_SMOOTH);
        // Buat ImageIcon baru dengan gambar yang telah diubah ukurannya
        ImageIcon resizedIconPerancis = new ImageIcon(resizedImage);
        Bendera.setIcon(resizedIconPerancis);

        // Mata Uang
        ImageIcon iconEuro = new ImageIcon(getClass().getResource("/gambar/euro.png"));
        Image uang = iconEuro.getImage();
        Image kecilImage = uang.getScaledInstance(200, 94, java.awt.Image.SCALE_SMOOTH);
        ImageIcon resizedIconEuro = new ImageIcon(kecilImage);
        Kurs.setIcon(resizedIconEuro);
        cbMataUang1.setSelectedIndex(3);
        cbMataUang2.setSelectedIndex(3);
        }
         
        // Mengambil objek dari model
        Object nilaiObjek = model.getValueAt(i, 2);
        // Mengonversi nilaiObjek ke String (jika nilaiObjek bukan String)
        String nilaiMataUang = String.valueOf(nilaiObjek);
        
        if(nilaiMataUang.contains("9150") || nilaiMataUang.contains("9200")) {
            txtNilaiKurs1.setText("9150");
            txtNilaiKurs2.setText("9200");
        } else if(nilaiMataUang.contains("122") || nilaiMataUang.contains("123")) {
            txtNilaiKurs1.setText("122");
            txtNilaiKurs2.setText("123");
        } else {
            txtNilaiKurs1.setText("13980");
            txtNilaiKurs2.setText("13970");
        }         
        txtNilaiTukar.requestFocus(false);
        // Mengambil objek dari model
        Object nilaiObjekTukar = model.getValueAt(i, 3);
        // Mengonversi nilaiObjek ke String (jika nilaiObjek bukan String)
        String nilaiTukar = String.valueOf(nilaiObjekTukar);
        txtNilaiTukar.setText(nilaiTukar);
        
        // Mengambil objek dari model
        Object nilaiObjekHasil = model.getValueAt(i, 4);
        // Mengonversi nilaiObjek ke String (jika nilaiObjek bukan String)
        String hasilTukar = String.valueOf(nilaiObjekHasil);
        txtHasil.setText(hasilTukar);
        
        String keterangan = (String) model.getValueAt(i, 6);
        if (!keterangan.isEmpty()) {
            mataUang1.setSelected(true);
        //Mandiri
        int nilai1 = Integer.parseInt(txtNilaiKurs1.getText());
        //BCA
        int nilai2 = Integer.parseInt(txtNilaiKurs2.getText());
        //menambahkan string kurs pada variabel HasilPerbandingan
        String kurs = mataUang.getText();
        mataUang.setText(String.valueOf(kurs));
        
            if (mataUang1.isSelected()) {
              if (nilai1 < nilai2) {
                HasilPerbandingan.setText("Kurs " + kurs +" di Bank Mandiri lebih murah dari BCA");
            } else if (nilai1 > nilai2) {
                HasilPerbandingan.setText("Kurs " + kurs +" di Bank Mandiri lebih mahal dari BCA");
            } else {
                HasilPerbandingan.setText("Kurs " + kurs +" di Bank Mandiri sama besar dengan BCA");
            }
            }else {
             HasilPerbandingan.setText("");
            }
        }else if (keterangan.isEmpty()) {
            mataUang1.setSelected(false);
        }
        //Membuka akses update dan delete button
        update.setEnabled(true);
        delete.setEnabled(true);
    }//GEN-LAST:event_tableMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        updateData();
    }//GEN-LAST:event_updateActionPerformed
    
    private void updateData() {
        // Mendapatkan data dari table
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        //Ambil Niali dari setiap kolom
        String Negara = (String) table.getValueAt(selectedRow, 0);
        String MataUang  = (String) table.getValueAt(selectedRow, 1);
        Integer NilaiMataUang = (Integer) table.getValueAt(selectedRow, 2);
        Integer JumlahNilaiTukar = (Integer) table.getValueAt(selectedRow, 3);
        Integer HasilNilaiTukar = (Integer) table.getValueAt(selectedRow, 4);
        String Bank = (String) table.getValueAt(selectedRow, 5);
        String Keterangan = (String) table.getValueAt(selectedRow, 6);
    
        if (Negara.isEmpty() || MataUang.isEmpty() || NilaiMataUang == null || JumlahNilaiTukar == null || HasilNilaiTukar == null || Bank.isEmpty() || Keterangan.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Semua kolom harus diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        try {
            Connection conn = DatabaseConnection.connect();
            String sql = "UPDATE transaksi SET MataUang=?,NilaiMataUang=?,JumlahNilaiTukar=?,HasilNilaiTukar=?,Bank=?,Keterangan=? WHERE Negara=?";
            try(PreparedStatement pst = conn.prepareStatement(sql)){
                pst.setString(1, MataUang);
                pst.setInt(2, NilaiMataUang);
                pst.setInt(3, JumlahNilaiTukar);
                pst.setInt(4, HasilNilaiTukar);
                pst.setString(5, Bank);
                pst.setString(6, Keterangan);
                pst.setString(7, Negara);
                
                int rowUpdated = pst.executeUpdate();
                if(rowUpdated > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil Diperbarui");
                    //resetForm();
                    loadData();
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(tugasgui.MoneyChanger.class.getName()).log(Level.SEVERE,null,e);
            }
    }
    
    private void tableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseEntered

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        deleteData();
    }//GEN-LAST:event_deleteActionPerformed

    private void txt_idTransaksiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idTransaksiKeyTyped
        clearAndSubmit.setEnabled(true);
        //menutup akses button update dan delete
        update.setEnabled(false);
        delete.setEnabled(false);
    }//GEN-LAST:event_txt_idTransaksiKeyTyped

    private void txtNilaiTukarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNilaiTukarKeyTyped
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
        clearAndSubmit.setEnabled(false);
    }//GEN-LAST:event_txtNilaiTukarKeyTyped

    private void mataUang1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mataUang1MouseClicked
        save.setEnabled(false);
    }//GEN-LAST:event_mataUang1MouseClicked

    private void txt_idTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_idTransaksiFocusGained
        save.setEnabled(true);
    }//GEN-LAST:event_txt_idTransaksiFocusGained

    private void mataUang1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mataUang1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_mataUang1MouseExited

    private void mataUang1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mataUang1StateChanged

    }//GEN-LAST:event_mataUang1StateChanged

    private void mataUang1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mataUang1MouseEntered

    }//GEN-LAST:event_mataUang1MouseEntered

    private void mataUang1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mataUang1MousePressed
        save.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
        clearAndSubmit.setEnabled(false);
    }//GEN-LAST:event_mataUang1MousePressed
    
     private void deleteData() {
    int selectedRow = table.getSelectedRow();
    int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah yakin ingin menghapus data ini ?",
            "Konfirmasi Hapus Data",
            JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        String id = table.getValueAt(selectedRow, 0).toString();
        try {
            Connection conn = DatabaseConnection.connect();
            String sql = "DELETE FROM transaksi WHERE Negara=?";
            try (PreparedStatement pst = conn.prepareStatement(sql)) {
                pst.setString(1, id);

                int rowDeleted = pst.executeUpdate();
                if (rowDeleted > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    loadData();
                } else {
                    JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(tugasgui.MoneyChanger.class.getName()).log(Level.SEVERE, null, e);
        }
    }
}
    
    private void searchAndDisplayData(String keyword) throws SQLException{
           String searchTerm = keyword.trim();
    DefaultTableModel model = (DefaultTableModel) table.getModel();

    // Hapus semua baris dari tabel sebelum melakukan pencarian
    while (model.getRowCount() > 0) {
        model.removeRow(0);
    }

    Connection conn = null;  // Deklarasikan di luar try agar bisa diakses di finally

    try {
        conn = MoneyChanger.DatabaseConnection.connect();

        // Query SQL untuk melakukan pencarian pada satu tabel
        String query = "SELECT * FROM transaksi WHERE IdTransaksi LIKE ? OR Negara LIKE ? OR MataUang LIKE ? OR NilaiMataUang = ? OR JumlahNilaiTukar = ? OR HasilNilaiTukar = ? OR Bank LIKE ? OR Keterangan LIKE ?";

        try (PreparedStatement pst = conn.prepareStatement(query)) {

            // Set parameter sesuai tipe data kolom di database
            pst.setInt(1, tryParseInt(searchTerm));
            pst.setString(2, "%" + searchTerm + "%");  // Negara is a VARCHAR
            pst.setString(3, "%" + searchTerm + "%");  // MataUang is a VARCHAR
            pst.setInt(4, tryParseInt(searchTerm));    // NilaiMataUang is an INT
            pst.setInt(5, tryParseInt(searchTerm));    // JumalahNilaiTukar is an INT
            pst.setInt(6, tryParseInt(searchTerm));    // HasilNilaiTukar is an INT
            pst.setString(7, "%" + searchTerm + "%");  // Bank is a VARCHAR
            pst.setString(8, "%" + searchTerm + "%");  // Keterangan is a VARCHAR

            try (ResultSet resultSet = pst.executeQuery()) {
                while (resultSet.next()) {
                    int IdTransaksi = resultSet.getInt("IdTransaksi");
                    String Negara = resultSet.getString("Negara");
                    String MataUang = resultSet.getString("MataUang");
                    int NilaiMataUang = resultSet.getInt("NilaiMataUang");
                    int JumlahNilaiTukar = resultSet.getInt("JumlahNilaiTukar");
                    int HasilNilaiTukar = resultSet.getInt("HasilNilaiTukar");
                    String Bank = resultSet.getString("Bank");
                    String Keterangan = resultSet.getString("Keterangan");

                    // Tambahkan baris ke model tabel
                    model.addRow(new Object[]{IdTransaksi, Negara, MataUang, NilaiMataUang, JumlahNilaiTukar, HasilNilaiTukar, Bank, Keterangan});
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    } finally {
        try {
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }
    
    private void saveToDatabase(Integer IdTransaksi, String Negara, String MataUang,Integer NilaiMataUang,Integer JumlahNilaiTukar,Integer HasilNilaiTukar,String Bank,String Keterangan) {
        try {
            Connection conn = MoneyChanger.DatabaseConnection.connect();

            // Query SQL untuk menyimpan data
            String query = "INSERT INTO transaksi (IdTransaksi, Negara, MataUang, NilaiMataUang, JumlahNilaiTukar, HasilNilaiTukar, Bank, Keterangan) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(query);

            // Set parameter
            pst.setInt(1,IdTransaksi);
            pst.setString(2, Negara);
            pst.setString(3, MataUang);
            pst.setInt(4, NilaiMataUang);
            pst.setInt(5, JumlahNilaiTukar);
            pst.setInt(6, HasilNilaiTukar);
            pst.setString(7, Bank);
            pst.setString(8, Keterangan);
            // ... Set parameter lain sesuai kebutuhan

            // Eksekusi query
            pst.executeUpdate();

            // Tutup koneksi
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    // Helper function to try parsing an integer, return 0 if not successful
private int tryParseInt(String value) {
    try {
        return Integer.parseInt(value);
    } catch (NumberFormatException e) {
        return 0;
    }          
    }  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoneyChanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoneyChanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoneyChanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoneyChanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoneyChanger().setVisible(true);
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Amerika;
    private javax.swing.JLabel Bendera;
    private javax.swing.JTextField HasilPerbandingan;
    private javax.swing.JButton HitungBCA;
    private javax.swing.JButton HitungMandiri;
    private javax.swing.JRadioButton Jepang;
    private javax.swing.JLabel Kurs;
    private javax.swing.JRadioButton Perancis;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbMataUang1;
    private javax.swing.JComboBox<String> cbMataUang2;
    private javax.swing.JButton clearAndSubmit;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mataUang;
    private javax.swing.JCheckBox mataUang1;
    private javax.swing.JPanel pnKurs;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JButton search;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtHasil;
    private javax.swing.JLabel txtKurs1;
    private javax.swing.JLabel txtKurs2;
    private javax.swing.JTextField txtNilaiKurs1;
    private javax.swing.JTextField txtNilaiKurs2;
    private javax.swing.JTextField txtNilaiTukar;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txt_idTransaksi;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
